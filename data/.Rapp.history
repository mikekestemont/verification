source("~/Desktop/TIME/takeover-master/liwc_diachron.R", chmd=T)
source("~/Desktop/TIME/takeover-master/liwc_diachron.R", setwd=T)
source("~/Desktop/TIME/takeover-master/liwc_diachron.R", setwd=True)
source("~/Desktop/TIME/takeover-master/liwc_diachron.R", setwd=TRUE)
source("~/Desktop/TIME/takeover-master/liwc_diachron.R", chdir=TRUE)
library.install(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
source("~/Desktop/TIME/takeover-master/liwc_diachron.R", chdir=TRUE)
source("~/Dropbox/TIME/takeover-master/liwc_diachron.R", chdir=TRUE)
source("~/Desktop/liwc_diachron.R", chdir=TRUE)
source("~/Dropbox/TIME/LaTeCH/code/liwc_diachron.R", chdir=TRUE)
citation(package = "base", lib.loc = NULL)
packages.install(tsne)
install.mackages(tsn
e)
packages.install(tsne)
install.mackages(tsne)
install.packages(tsne)
install.packages(tsne-package)
install.packages("tsne-package")
install.packages("tsne")
library(tsne)
colors = rainbow(length(unique(iris$Species)))
names(colors) = unique(iris$Species)
ecb = function(x,y){plot(x,t="n"); text(x,labels=iris$Species, col=colors[iris$Species])}
tsne_iris = tsne(iris[,1:4],epoch_callback=ecb,perplexity=50)
dev.new()
pca_iris = princomp(iris[,1:4])$scores[,1:2]
plot(pca_iris,t="n")
text(pca_iris,labels=iris$Species,col=colors[iris$Species])
install.packages("~/GitRepos/stylo/", repos = NULL, type="source")
install.packages("~/GitRepos/stylo", repos = NULL, type="source")
install.packages("~/GitRepos/stylo/R/", repos = NULL, type="source")
install.packages("~/GitRepos/stylo/R/", type="source")
source("~/GitRepos/stylo/R/stylo.R", chdir=TRUE)
source("~/GitRepos/stylo/R/stylo.R", GUI=T, chdir=TRUE)
source("~/GitRepos/stylo/R/stylo.R",gui=TRUE, chdir=TRUE)
source("~/GitRepos/stylo/R/stylo.R")
install.packages("~/GitRepos/stylo/R/", type="source")
install.packages("~/GitRepos/stylo/", type="source")
install.packages("~/GitRepos/stylo/", type="source", repos=N)
install.packages("~/GitRepos/stylo/", type="source", repos=NO)
install.packages("~/GitRepos/stylo/", type="source", repos="NO")
install.packages("~/GitRepos/stylo/", type="source", repos=NULL)
library("stylo")
library(stylo)
library("stylo")
packages.install(tcltk2,ape,pamr,e1071)
install.pckages(tcltk2,ape,pamr,e1071
)
install.packages(tcltk2,ape,pamr,e1071)
install.packages("tcltk2","ape","pamr","e1071")
install.packages(c("tcltk2","ape","pamr","e1071"))
stylo()
library(stylo)
packages.install(stylo)
library("stylo")
packages.install(tsne)
install.packages(tsne)
install.packages("tsne")
library(tsne)
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
stylo
library(stylo)
stylo()
c(4,5,7)
a<-c(4,5,7)
sum(a)
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
source("~/GitRepos/occ-stylometry/geo.R")
library.install(maps)
install.packages("maps")
source("~/GitRepos/occ-stylometry/geo.R")
install.packages("mapdata")
source("~/GitRepos/occ-stylometry/geo.R")
citation()
source("~/Desktop/Limburg Sermons/histograms.R")
source("~/Desktop/Limburg Sermons/histograms.R", chdir=TRUE)
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
stylo()
library(stylo)
setwd("~/GitRepos/verification/data/")
stylo()
stylo()
stylo()
stylo()
stylo()
stylo()
